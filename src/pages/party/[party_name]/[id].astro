---
import { supabase } from "../../../utils/supabase";

const user_name = Astro.cookies.get("id");
if (typeof user_name === "undefined") {
  return Astro.redirect("/");
}

const {party_name, id } = Astro.params;
console.log(id);

if (typeof id !== "undefined" && typeof party_name !== 'undefined') {
  Astro.cookies.set("party_name", party_name);
}
const { data: party, error } = await supabase
  .from("party")
  .select("*")
  .eq("create_by", id);

if (party?.length !== 0 && party != null) {
  console.log(party);
  let users: string[] = party[0].children;
  if (users.length >= 3) {
    return Astro.redirect("/main");
  }
  if (users == null) {
    users = [];
  }
  users.push(user_name?.value || "");
  const { data, error } = await supabase
    .from("party")
    .update({ children: users })
    .eq("party_name", party_name)
    .select();
  if (!error) {
    console.log("ID",id);
    
    const { data: user, error } = await supabase
      .from("users")
      .update({ party: party_name })
      .eq("user_name", user_name.value)
      .select();
      console.log("USER",user);
      console.log("NAME", user_name)
      
    if (error) {
      console.log(error.message);
    }
    Astro.cookies.set("party_name", party_name || "");
    return Astro.redirect("/main");
  } else {
    return new Response("Hell");
  }
}
---
